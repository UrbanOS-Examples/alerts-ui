name: Static Analysis
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    release:
        types: [published]

jobs:
    Lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: '14'
                  cache: 'npm'
            - run: npm install
            - run: npm run lint

    Build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: '14'
                  cache: 'npm'
            - run: npm install
            - run: npm run build

    Test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: '14'
                  cache: 'npm'
            - run: npm install
            - run: npm run test
            - name: Test Report
              uses: dorny/test-reporter@v1
              if: success() || failure() # run this step even if previous step failed
              with:
                  name: Test Results # Name of the check run which will be created
                  path: jest_output/junit.xml # Path to test results
                  reporter: jest-junit # Format of test results

    start_docker_action:
        runs-on: ubuntu-latest
        needs: [Lint, Build, Test]
        steps:
            - name: Kickoff Docker Action
              uses: peter-evans/repository-dispatch@v1
              with:
                  token: ${{ secrets.ORG_PAT }}
                  repository: SmartColumbusOS/alerts-dashboard
                  event-type: start-publish-docker
                  client-payload: '{"release_tag_name": "${{ github.event.release.tag_name }}", "ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
